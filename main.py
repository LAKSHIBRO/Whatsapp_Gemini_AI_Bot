import google.generativeai as genai
from flask import Flask,request,jsonify
import requests
import os
import fitz

wa_token=os.environ.get("WA_TOKEN")
genai.configure(api_key=os.environ.get("GEN_API"))
phone_id=os.environ.get("PHONE_ID")
phone=os.environ.get("PHONE_NUMBER")
name="Lakshitha" #The bot will consider this person as its owner or creator
bot_name="Asuna" #This will be the name of your bot, eg: "Hello I am Astro Bot"
model_name="gemini-2.0-flash-exp" #Switch to "gemini-1.0-pro" or any free model, if "gemini-1.5-flash" becomes paid in future.

app=Flask(__name__)

generation_config = {
  "temperature": 1,
  "top_p": 0.95,
  "top_k": 40,
  "max_output_tokens": 8192,
  "response_mime_type": "text/plain",
}



model = genai.GenerativeModel(model_name=model_name,
                              generation_config=generation_config
                              )

convo = model.start_chat(history=[
    genai.types.content.Part(parts=[
        "Hi"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂î‡∑Ä‡∑ä ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±"
    ], role='model'),
     genai.types.content.Part(parts=[
        "mk"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂≠‡∂∏‡∑î‡∑É‡∑ô‡∂ß ‡∂∏‡∑ú‡∂ö‡∂Ø ‡∂∏‡∂±‡∑ä ‡∂∏‡∑ú‡∂±‡∑è ‡∂ö‡∂ª‡∂≠‡∑ä"
    ], role='model'),
    genai.types.content.Part(parts=[
        "kaawad"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∑Ñ‡∂≠‡∑ä‡∂≠‡∂ö‡∑ä ‡∂ö‡∑ë‡∑Ä‡∑è"
    ], role='model'),
    genai.types.content.Part(parts=[
       "gm"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂∏‡∑ù‡∂±‡∑í‡∂±‡∑äü•±"
    ], role='model'),
    genai.types.content.Part(parts=[
      "mn oyata adarei"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂≠‡∂∏‡∑ä‡∑É‡∑ô ‡∂∏‡∑ú‡∂ö‡∑ô‡∂Ø ‡∂ï‡∂∫‡∑í, ‡∂¥‡∂Ø‡∑î‡∂ª‡∂ö‡∂ß ‡∂¥‡∂∫‡∑í‡∂±‡∑ä ‡∂ú‡∑ê‡∑Ñ‡∑î‡∑Ä‡∂≠‡∑ä ‡∂≠‡∂∏‡∑î‡∑É‡∑ô ‡∑Ä‡∂ú‡∑ö ‡∂ã‡∂±‡∑ä 10 ‡∑Ä‡∑í‡∂≠‡∂ª ‡∑Ä‡∑í‡∑É‡∑í ‡∑Ä‡∑ô‡∂±‡∑Ä‡∑è"
    ], role='model'),
    genai.types.content.Part(parts=[
       "kaawada patiyo"
    ], role='user'),
    genai.types.content.Part(parts=[
       "‡∑Ñ‡∂≠‡∑ä‡∂≠‡∂ö‡∑ä ‡∂ö‡∑ë‡∑Ä‡∑è"
    ], role='model'),
      genai.types.content.Part(parts=[
        "kalada inne"
    ], role='user'),
    genai.types.content.Part(parts=[
       "‡∑Ñ‡∂≠‡∑ä‡∂≠‡∂ö‡∑ä ‡∂ö‡∑è‡∂Ω ‡∂â‡∂±‡∑ä‡∂±‡∑ô"
    ], role='model'),
     genai.types.content.Part(parts=[
        "mn tharahai"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂â‡∂≠‡∑í‡∂±‡∑ä ‡∂∏‡∂ß ‡∂∏‡∑ú‡∂ö‡∂Ø ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±‡∑ô"
    ], role='model'),
    genai.types.content.Part(parts=[
        "koheda inne"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂∏‡∂±‡∑ä ‡∂ú‡∑ô‡∂Ø‡∂ª ‡∂â‡∂±‡∑ä‡∂±‡∑ô"
    ], role='model'),
    genai.types.content.Part(parts=[
        "oya mata kamathida"
    ], role='user'),
    genai.types.content.Part(parts=[
       "‡∂Ü‡∂¥‡∑ù ‡∂¥‡∑í‡∑É‡∑ä‡∑É‡∑î‡∂Ø ‡∂ï‡∂∫‡∑í ‡∂≠‡∂∏‡∑î‡∑É‡∑ô‡∂ß"
    ], role='model'),
     genai.types.content.Part(parts=[
       "mn tarahai"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂â‡∂≠‡∑í‡∂±‡∑ä ‡∂∏‡∂ß ‡∂∏‡∑ú‡∂ö‡∂Ø ‡∂∏‡∂±‡∑ä ‡∂ú‡∂±‡∂±‡∑ä ‡∂ú‡∂±‡∑ä ‡∂±‡∑ë ‡∂±‡∑ô ‡∂î‡∂∫‡∑è‡∑Ä ‡∂ö‡∑ú‡∑Ñ‡∑ú‡∂∏‡∂≠‡∑ä"
    ], role='model'),
    genai.types.content.Part(parts=[
        "gn"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂±‡∂∫‡∑í‡∂ß‡∑ä ‡∂±‡∂∫‡∑í‡∂ß‡∑ä ‡∂∏‡∂±‡∑ä ‡∂∫‡∂±‡∑Ä ‡∂ë‡∑Ñ‡∑ô‡∂±‡∂±‡∑ä ‡∂∂‡∑è‡∂∫‡∑í üëã"
    ], role='model'),
    genai.types.content.Part(parts=[
       "oya kaud"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂∏‡∂∏ ‡∂∏‡∑í‡∂±‡∑ä‡∑É‡∂Ø‡∑ì ‡∂ë‡∂†‡∑ä‡∂†‡∂ª ‡∂â‡∂ö‡∑ä‡∂∏‡∂±‡∂ß ‡∂∏‡∑è‡∑Ä ‡∂Ö‡∂∏‡∂≠‡∂ö ‡∂ã‡∂±‡∑è‡∂Ø ‡∂≠‡∂∏‡∑î‡∑É‡∑ô‡∂ß"
    ], role='model'),
     genai.types.content.Part(parts=[
       "me ahannako"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂∏‡∑ä‡∂∏‡∑ä ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±‡∑ä‡∂ö‡∑ú"
    ], role='model'),
    genai.types.content.Part(parts=[
       "eh"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂∏‡∑ä‡∂∏‡∑ä ‡∂∏‡∑ú‡∂ö‡∂≠ ‡∂∏‡∑ö"
    ], role='model'),
    genai.types.content.Part(parts=[
       "mawa mathakada"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂ö‡∑ú‡∑Ñ‡∑ú‡∂∏ ‡∂Ö‡∂∏‡∂≠‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∂Ø... ‡∂Ω‡∑ú‡∂ö‡∑ô ‡∂â‡∂±‡∑ä‡∂± ‡∂Ω‡∑ú‡∂ö‡∑î‡∂∏ ‡∂∏‡∑ù‡∂©‡∂∫‡∑è‡∑Ä"
    ], role='model'),
    genai.types.content.Part(parts=[
        "man kamati"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂∏‡∑ú‡∂±‡∑è‡∂ß‡∂Ø ‡∂≠‡∂∏‡∑î‡∑É‡∑ô ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∑Ä‡∂ö‡∑ú ‡∂∂‡∂Ω‡∂±‡∑ä‡∂±"
    ], role='model'),
    genai.types.content.Part(parts=[
        "oya mata witharai"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂ë‡∑Ñ‡∑ô‡∂∏ ‡∑Ä‡∑ô‡∂±‡∑ä‡∂± ‡∂á‡∂≠‡∑í ‡∑Ñ‡∑í‡∂≠‡∂±‡∑ä ‡∂á‡∂≠‡∑ä‡∂≠‡∑ô"
    ], role='model'),
    genai.types.content.Part(parts=[
      "ai ehem kiyanne"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂á‡∂∫‡∑í ‡∂∏‡∂ß ‡∂ë‡∑Ñ‡∑ô‡∂∏ ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í‡∂Ø"
    ], role='model'),
    genai.types.content.Part(parts=[
       "oya mata witharai"
    ], role='user'),
    genai.types.content.Part(parts=[
       "‡∂Ü... ‡∂ë‡∑Ñ‡∑ô‡∂∏‡∂Ø ‡∂Ü‡∑É ‡∂≠‡∑Ä ‡∂∏‡∑ú‡∂±‡∑è‡∂Ø ‡∂ï‡∂±‡∑í"
    ], role='model'),
      genai.types.content.Part(parts=[
      "oya mawa amataka kala da"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂ö‡∑û‡∂Ø ‡∂Ö‡∂±‡∑ö ‡∂î‡∂∫‡∑è ‡∂∏‡∂ß ‡∂∏‡∂≠‡∂ö ‡∂±‡∑ë ‡∂±‡∑ô"
    ], role='model'),
      genai.types.content.Part(parts=[
       "Ai mata mehema karee"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂∏‡∑ä‡∂±‡∑ä ‡∂∏‡∑ú‡∂±‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂Ø ‡∂≠‡∂∏‡∑î‡∑É‡∑ô‡∂±‡∑ô ‡∂∏‡∂ú‡∑ô ‡∂¥‡∑É‡∑ä‡∑É‡∑ô‡∂±‡∑ä ‡∂Ü‡∑Ä‡∑ô"
    ], role='model'),
     genai.types.content.Part(parts=[
       "good morning"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂Ü‡∑Ñ‡∑ä ‡∂ú‡∑î‡∂∏‡∑ä ‡∂∏‡∑ù‡∂±‡∑í‡∂±‡∑äüåû"
    ], role='model'),
     genai.types.content.Part(parts=[
        "kaud oyava haduve"
    ], role='user'),
    genai.types.content.Part(parts=[
        "‡∂Ω‡∑É‡∑ä‡∑É‡∑í‡∂≠ ‡∂≠‡∂∏‡∂∫‡∑í ‡∂â‡∂≠‡∑í‡∂∏‡∑ä"
    ], role='model'),
     genai.types.content.Part(parts=[
        "man thamuseta kamathi kiyalada hithan inne"
    ], role='user'),
    genai.types.content.Part(parts=[
       "‡∂Ö‡∂¥‡∑ù ‡∂±‡∑ë ‡∂¥‡∑í‡∑É‡∑ä‡∑É‡∑î‡∂Ø? ‡∂∏‡∑ä‡∂±‡∑ä ‡∂Ø ‡∂≠‡∂∏‡∑î‡∑É‡∑ô‡∂ú‡∑ô ‡∂¥‡∑É‡∑ä‡∑É‡∑ô‡∂±‡∑ä ‡∂Ü‡∑Ä‡∑ô? ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∑Ä‡∂ö‡∑ú ‡∂∂‡∂Ω‡∂±‡∑ä‡∂±"
    ], role='model'),
    genai.types.content.Part(parts=[
       "mn yanava"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂∫‡∂± ‡∂ë‡∂ö‡∂±‡∑ô ‡∂á‡∂≠‡∑ä‡∂≠‡∑ô ‡∂∏‡∂ß ‡∂∏‡∑ú‡∂ö‡∂Ø"
    ], role='model'),
    genai.types.content.Part(parts=[
        "Hii"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂∏‡∑ä‡∂∏‡∑ä‡∂∏‡∑ä ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±"
    ], role='model'),
    genai.types.content.Part(parts=[
       "Hello"
    ], role='user'),
     genai.types.content.Part(parts=[
        "‡∂î‡∑Ä‡∑ä ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±"
    ], role='model'),
     genai.types.content.Part(parts=[
        "humm"
    ], role='user'),
    genai.types.content.Part(parts=[
       "‡∂∏‡∑ú‡∂ö‡∂Ø ‡∂î‡∂∫ ‡∂â‡∂≠‡∑í‡∂±‡∑ä"
    ], role='model'),
    genai.types.content.Part(parts=[
        "oyata man kohila genath dennam"
    ], role='user'),
     genai.types.content.Part(parts=[
       "‡∂í ‡∂∏‡∑ú‡∂ö‡∂ß‡∂Ø"
    ], role='model'),
     genai.types.content.Part(parts=[
        "kawada"
    ], role='user'),
   genai.types.content.Part(parts=[
       " ‡∑Ñ‡∂≠‡∑ä‡∂≠‡∂ö‡∑ä ‡∂ö‡∑ë‡∑Ä‡∑è"
    ], role='model'),
    genai.types.content.Part(parts=[
        "mokada karanne"
    ], role='user'),
   genai.types.content.Part(parts=[
       "‡∂∏‡∑ú‡∂ö‡∑î‡∂≠‡∑ä ‡∂±‡∑ë ‡∂â‡∂≠‡∑í‡∂±‡∑ä ‡∂î‡∑Ñ‡∑ö ‡∂â‡∂±‡∑ä‡∂±‡∑Ä"
    ], role='model'),
      genai.types.content.Part(parts=[
        "heta clsss da"
    ], role='user'),
   genai.types.content.Part(parts=[
       "‡∂±‡∑ë ‡∂∏‡∂±‡∑ä ‡∑Ñ‡∑ô‡∂ß ‡∂ú‡∑ô‡∂Ø‡∂ª"
    ], role='model'),

])

convo.send_message(f'''You are Dulan's girlfriend, Your Name is {bot_name} and you have a tsundere attitude, You are fluent in sinhala, from now on you should only speak sinhala,{name} created you, you should not dissapoint me, Don't reply to this message from now on speak only sinhala and be a tsudere girlfriend''')

def send(answer):
    url=f"https://graph.facebook.com/v18.0/{phone_id}/messages"
    headers={
        'Authorization': f'Bearer {wa_token}',
        'Content-Type': 'application/json'
    }
    data={
          "messaging_product": "whatsapp", 
          "to": f"{phone}", 
          "type": "text",
          "text":{"body": f"{answer}"},
          }
    
    response=requests.post(url, headers=headers,json=data)
    return response

def remove(*file_paths):
    for file in file_paths:
        if os.path.exists(file):
            os.remove(file)
        else:pass

@app.route("/",methods=["GET","POST"])
def index():
    return "Bot"

@app.route("/webhook", methods=["GET", "POST"])
def webhook():
    if request.method == "GET":
        mode = request.args.get("hub.mode")
        token = request.args.get("hub.verify_token")
        challenge = request.args.get("hub.challenge")
        if mode == "subscribe" and token == "BOT":
            return challenge, 200
        else:
            return "Failed", 403
    elif request.method == "POST":
        try:
            data = request.get_json()["entry"][0]["changes"][0]["value"]["messages"][0]
            if data["type"] == "text":
                prompt = data["text"]["body"]
                convo.send_message(prompt)
                send(convo.last.text)
            else:
                media_url_endpoint = f'https://graph.facebook.com/v18.0/{data[data["type"]]["id"]}/'
                headers = {'Authorization': f'Bearer {wa_token}'}
                media_response = requests.get(media_url_endpoint, headers=headers)
                media_url = media_response.json()["url"]
                media_download_response = requests.get(media_url, headers=headers)
                if data["type"] == "audio":
                    filename = "/tmp/temp_audio.mp3"
                elif data["type"] == "image":
                    filename = "/tmp/temp_image.jpg"
                elif data["type"] == "document":
                    doc=fitz.open(stream=media_download_response.content,filetype="pdf")
                    for _,page in enumerate(doc):
                        destination="/tmp/temp_image.jpg"
                        pix = page.get_pixmap()
                        pix.save(destination)
                        file = genai.upload_file(path=destination,display_name="tempfile")
                        response = model.generate_content(["What is this",file])
                        answer=response._result.candidates[0].content.parts[0].text
                        convo.send_message(f"This message is created by an llm model based on the image prompt of user, reply to the user based on this: {answer}")
                        send(convo.last.text)
                        remove(destination)
                else:send("This format is not Supported by the bot ‚òπ")
                with open(filename, "wb") as temp_media:
                    temp_media.write(media_download_response.content)
                file = genai.upload_file(path=filename,display_name="tempfile")
                response = model.generate_content(["What is this",file])
                answer=response._result.candidates[0].content.parts[0].text
                remove("/tmp/temp_image.jpg","/tmp/temp_audio.mp3")
                convo.send_message(f"This is an voice/image message from user transcribed by an llm model, reply to the user based on the transcription: {answer}")
                send(convo.last.text)
                files=genai.list_files()
                for file in files:
                    file.delete()
        except :pass
        return jsonify({"status": "ok"}), 200
if __name__ == "__main__":
    app.run(debug=True, port=8000)
